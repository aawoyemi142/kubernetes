<?php
echo phpinfo();
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-php-deployment
  labels:
    type: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
      type: backend
  template:
    metadata:
      labels:
        app: php
        type: backend
    spec:
      volumes:
      - name: nginx-php-pvclaim
        persistentVolumeClaim:
          claimName: nginx-php-pvclaim
      - name: nginx-php-config
        configMap:
          name: nginx-php-config
      containers:
      - name: php
        image: php8.1-fpm
        volumeMounts:
        - name: nginx-php-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: nginx-php-pvclaim
          mountPath: /srv/app/
      - name: nginx
        image: nginx:alpine
        volumeMounts:
        - name: nginx-php-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: nginx-php-pvclaim
          mountPath: /srv/app/
          
          
apiVersion: v1
kind: Service
metadata:
  name: php
  labels:
    type: backend
spec:
  type: ClusterIP
  selector:
    app: php
    type: backend
  ports:
  - protocol: TCP
    port: 9000

---

apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    type: backend
spec:
  type: NodePort
  selector:
    app: nginx
    type: backend
  ports:
  - protocol: TCP
    port: 80
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-php-deployment
  labels:
    type: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
      type: backend
  template:
    metadata:
      labels:
        app: php
        type: backend
    spec:
      volumes:
      - name: nginx-php-pvclaim
        persistentVolumeClaim:
          claimName: nginx-php-pvclaim
      - name: nginx-php-config
        configMap:
          name: nginx-php-config
      containers:
      - name: php
        image: php8.1-fpm
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        volumeMounts:
        - name: nginx-php-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: nginx-php-pvclaim
          mountPath: /srv/app/
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        volumeMounts:
        - name: nginx-php-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: nginx-php-pvclaim
          mountPath: /srv/app/
          
          
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phpmyadmin-ingress
spec:
  rules:
  - host: "phpmyadmin.shokoloko.dev"
    http:
      paths:
      - pathType: Prefix
        path: "/bar"
        backend:
          service:
            name: phpmyadmin-service
            port:
              number: 80
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin-service
spec:
  type: ClusterIP
  selector: 
    app: phpmyadmin
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-php-config
  labels:
    type: backend
data:
  default.conf: |
        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name _;
            root        /srv/app/public;
            location / {
                try_files $uri /index.php$is_args$args;
            }
            location ~ ^/index\.php(/|$) {
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_read_timeout 300;
                proxy_read_timeout 300;
                fastcgi_split_path_info ^(.+\.php)(/.*)$;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                fastcgi_param DOCUMENT_ROOT $realpath_root;
                internal;
            }
            location ~ \.php$ {
              return 404;
            }
            client_max_body_size 6m;
            error_log  /var/log/nginx/error.log;
            access_log /var/log/nginx/access.log;
        }
apiVersion: v1
kind: Secret
metadata:
  name: nginx-php
type: kubernetes.io/basic-auth
stringData:
  password: test1234
apiVersion: v1
kind: PersistentVolume
metadata: 
  name: nginx-php-pvvolume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-php-pvclaim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin-deployment
  labels:
    app: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
        - name: phpmyadmin
          image: phpmyadmin
          ports:
            - containerPort: 80
          env:
            - name: PMA_HOST
              value: mysql-service
            - name: PMA_PORT
              value: "3306"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: password
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phpmyadmin-ingress
spec:
  rules:
  - host: 
  - http:
      paths:
      - backend:
          service:
            name: phpmyadmin-service
            port:
              number: 80
